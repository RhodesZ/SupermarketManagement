<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACYAAAAmCAYAAACoPemuAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAALiMAAC4jAXilP3YAAAOASURBVFhHzVhbTxNBFN4HHkn4
        FcAT/AB9McZbIlZIMKLQ+GY0XtrCgzeIT5r4O9SkEC8xGhU1Rl/UmLa0akkExagJgdA2tBuFXuC43/R0
        u93O0p1ewC/5mt0zO+d8mc6ZMzOaAVJlT08P+f1+mpqaomg0SslkkrLZrCCeYUMbvsG3Mh8uKDVWsb29
        nUZHRykej5Mq0Ad94UPm24FSo8m2tjby+XyUSCQ4TP2AD/iCT1ksG6VGwc7OTgqFQuy2eYBP+JbFtFBq
        pL6+Pkqn0+yq+chkMiKGLDaz2jg8PEz5fJ5dtA6IMTIyUhWfWWnweDxUKBS4a+uBWIhp12Gw/NLd3S2G
        eLuBmIht1WKw+IBMacVEdwvEtmVr8QFpvNPAglwhDAtfrXVqbeEnfbt0g/TYLFvcY+nuA1oYv0WFjM4W
        OaDBsghrYlWuhblzVym8y0OxQyfp7/wCW2sj8fil6Acu3bnPVmdAiynMTZnRI58pemBIBIjuH3IlLvHk
        lSlq7uIE5RIpbnEGtAhhvb29bKoNiIEoIc4Qib/XCcnpt6aor8Zob+bdL0HQpGHCqUCIO3hSBIwd9tLa
        j1/cUkbqRVnU3PlrtLGe5RZ3CAQCpAWDQX51D4iBKAT+dORUhbjk9JuyKN+E0kiVMDk5SVosFuNXNUAM
        REEARK7/XqTVdyFT1Lz/OtHGJn+tBmjSGtnOWEcuuu84hXcfLYoKGKIaADRp2HU2gvxq2pxzIOZUo4Cm
        hoWl34eMDD1hCosPnaXs4jK31gchrJG/siL7LozTl8HT4tkpW91C/JX1Tn579gHZ5RXHbFWBmPxITVUk
        n742Rdmzz56t9YgTywUWMxVYa59T9lVkq5EYKrUVEAusSkmy176tgHKlWltLECXJbRFfDj4yRbmtfdba
        OrP3GKU/RLjFGWYRx8/Y2BibnfH9ys2iqDOXlWofxM3sGRR9Vx4+Y6szoMUU5majuGGsLUu371FB/8MW
        98h8jBqinvObM3C9ULFRBFV3Ga1A1dYa3OnDSCQSkR9GwJ06vum67nx8K/G/PPCWiGP7dohDDK/XWxWf
        KTVSf3+/GOJWAb4HBgaksZlSo2BXVxeFw2F21TzAJ3zLYlooNZpEpuCUnkrVPnrVAnw05eLOyo6ODrEq
        z86qn8TRB33hQ+bbgVLjlsSFL3YA1svhXC4naL0cxjf1XQ5r9A+cpzduaCXXmwAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>122, 17</value>
  </metadata>
</root>